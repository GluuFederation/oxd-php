<?php
/**
 * Created by PhpStorm.
 * User: Vlad Karapetyan
 */
require_once 'Client_OXD.php';

class Discovery extends Client_oxd
{
    /**start parameter for request!**/
        private $req_discovery_url = null;
    /**end request parameter**/

    /**start parameter for response!**/
        public static $resp_issuer;
        public static $resp_authorization_endpoint;
        public static $resp_token_endpoint;
        public static $resp_userinfo_endpoint;
        public static $resp_clientinfo_endpoint;
        public static $resp_check_session_iframe;
        public static $resp_end_session_endpoint;
        public static $resp_jwks_uri;
        public static $resp_registration_endpoint;
        public static $resp_validate_token_endpoint;
        public static $resp_federation_metadata_endpoint;
        public static $resp_federation_endpoint;
        public static $resp_id_generation_endpoint;
        public static $resp_scopes_supported;
        public static $resp_types_supported;
        public static $resp_grant_types_supported;
        public static $resp_acr_values_supported;
        public static $resp_subject_types_supported;
        public static $resp_service_documentation;
        public static $resp_claims_supported;
        public static $resp_claims_locales_supported;
        public static $resp_ui_locales_supported;
        public static $resp_claims_parameter_supported;
    /**end response parameter**/

    public function __construct()
    {
        /**
         * Discovery constructor.
         **/
        parent::__construct(); // TODO: Change the autogenerated stub
    }
    /*
     * @param static
    */
    public function setRespParam(){
        self::$resp_issuer = $this->getRespData()->issuer;
        self::$resp_authorization_endpoint = $this->getRespData()->authorization_endpoint;
        self::$resp_token_endpoint = $this->getRespData()->token_endpoint;
        self::$resp_userinfo_endpoint = $this->getRespData()->userinfo_endpoint;
        self::$resp_clientinfo_endpoint = $this->getRespData()->clientinfo_endpoint;
        self::$resp_check_session_iframe = $this->getRespData()->check_session_iframe;
        self::$resp_end_session_endpoint = $this->getRespData()->end_session_endpoint;
        self::$resp_jwks_uri = $this->getRespData()->jwks_uri;
        self::$resp_registration_endpoint = $this->getRespData()->registration_endpoint;
        self::$resp_validate_token_endpoint = $this->getRespData()->validate_token_endpoint;
        self::$resp_federation_metadata_endpoint = $this->getRespData()->federation_metadata_endpoint;
        self::$resp_federation_endpoint = $this->getRespData()->federation_endpoint;
        self::$resp_id_generation_endpoint = $this->getRespData()->id_generation_endpoint;
        self::$resp_scopes_supported = $this->getRespData()->scopes_supported;
        self::$resp_types_supported = $this->getRespData()->response_types_supported;
        self::$resp_grant_types_supported = $this->getRespData()->grant_types_supported;
        self::$resp_acr_values_supported = $this->getRespData()->acr_values_supported;
        self::$resp_subject_types_supported = $this->getRespData()->subject_types_supported;
        self::$resp_claims_supported = $this->getRespData()->claims_supported;
        self::$resp_service_documentation = $this->getRespData()->service_documentation;
        self::$resp_claims_locales_supported = $this->getRespData()->claims_locales_supported;
        self::$resp_ui_locales_supported = $this->getRespData()->ui_locales_supported;
        self::$resp_claims_parameter_supported = $this->getRespData()->scope_to_claims_mapping;
    }
    /**
     * @return null
     */
    public function getReqDiscoveryUrl()
    {
        return $this->req_discovery_url;
    }

    /**
     * @param null $req_discovery_url
     */
    public function setReqDiscoveryUrl($req_discovery_url)
    {
        $this->req_discovery_url = $req_discovery_url;
    }


    public function setCommand()
    {
        $this->command = 'discovery';
    }

    public function setParams()
    {
        $this->params = array(
            "discovery_url" => $this->getReqDiscoveryUrl()
        );
    }

}